package logic;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.1.12 2017-07-24T14:25:27.747-05:00
 * Generated source version: 3.1.12
 * 
 */
@WebService(targetNamespace = "http://logic/", name = "ComputationClassPortType")
@XmlSeeAlso({ net.java.dev.jaxb.array.ObjectFactory.class, ObjectFactory.class })
public interface ComputationClassPortType {

	@WebMethod
	@RequestWrapper(localName = "febonacci", targetNamespace = "http://logic/", className = "logic.Febonacci")
	@ResponseWrapper(localName = "febonacciResponse", targetNamespace = "http://logic/", className = "logic.FebonacciResponse")
	@WebResult(name = "return", targetNamespace = "http://logic/")
	public int febonacci(@WebParam(name = "n", targetNamespace = "http://logic/") int n);

	@WebMethod
	@RequestWrapper(localName = "tanFunction", targetNamespace = "http://logic/", className = "logic.TanFunction")
	@ResponseWrapper(localName = "tanFunctionResponse", targetNamespace = "http://logic/", className = "logic.TanFunctionResponse")
	@WebResult(name = "return", targetNamespace = "http://logic/")
	public double tanFunction(@WebParam(name = "x", targetNamespace = "http://logic/") double x);

	@WebMethod
	@RequestWrapper(localName = "multiply", targetNamespace = "http://logic/", className = "logic.Multiply")
	@ResponseWrapper(localName = "multiplyResponse", targetNamespace = "http://logic/", className = "logic.MultiplyResponse")
	@WebResult(name = "return", targetNamespace = "http://logic/")
	public java.util.List<net.java.dev.jaxb.array.DoubleArray> multiply(
			@WebParam(name = "length", targetNamespace = "http://logic/") int length);
}
