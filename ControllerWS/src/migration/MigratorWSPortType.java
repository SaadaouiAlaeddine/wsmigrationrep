package migration;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.1.12
 * 2017-07-26T15:22:03.948-05:00
 * Generated source version: 3.1.12
 * 
 */
@WebService(targetNamespace = "http://logic/", name = "MigratorWSPortType")
@XmlSeeAlso({ObjectFactory.class})
public interface MigratorWSPortType {

    @WebMethod
    @RequestWrapper(localName = "duplicateWS", targetNamespace = "http://logic/", className = "migration.DuplicateWS")
    @ResponseWrapper(localName = "duplicateWSResponse", targetNamespace = "http://logic/", className = "migration.DuplicateWSResponse")
    @WebResult(name = "return", targetNamespace = "")
    public boolean duplicateWS(
        @WebParam(name = "ws", targetNamespace = "http://logic/")
        migration.Ws ws,
        @WebParam(name = "destinationManagerURL", targetNamespace = "http://logic/")
        java.lang.String destinationManagerURL,
        @WebParam(name = "destinationWSDLAddress", targetNamespace = "http://logic/")
        java.lang.String destinationWSDLAddress
    );

    @WebMethod
    @RequestWrapper(localName = "moveWS", targetNamespace = "http://logic/", className = "migration.MoveWS")
    @ResponseWrapper(localName = "moveWSResponse", targetNamespace = "http://logic/", className = "migration.MoveWSResponse")
    @WebResult(name = "return", targetNamespace = "")
    public boolean moveWS(
        @WebParam(name = "ws", targetNamespace = "http://logic/")
        migration.Ws ws,
        @WebParam(name = "sourceManagerURL", targetNamespace = "http://logic/")
        java.lang.String sourceManagerURL,
        @WebParam(name = "destinationManagerURL", targetNamespace = "http://logic/")
        java.lang.String destinationManagerURL,
        @WebParam(name = "destinationWSDLAddress", targetNamespace = "http://logic/")
        java.lang.String destinationWSDLAddress
    );

    @WebMethod
    @RequestWrapper(localName = "undeploy", targetNamespace = "http://logic/", className = "migration.Undeploy")
    @ResponseWrapper(localName = "undeployResponse", targetNamespace = "http://logic/", className = "migration.UndeployResponse")
    @WebResult(name = "return", targetNamespace = "")
    public boolean undeploy(
        @WebParam(name = "ws", targetNamespace = "http://logic/")
        migration.Ws ws,
        @WebParam(name = "tomcatManagerURL", targetNamespace = "http://logic/")
        java.lang.String tomcatManagerURL
    );
}
